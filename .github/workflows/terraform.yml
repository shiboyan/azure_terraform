name: 'Terraform'

on:
  push:
    branches:
      - "dev"
  pull_request:
    branches:
      - "dev"

permissions:
  contents: write
  id-token: write
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Run terraform fmt check
        run: terraform fmt -check -diff -recursive ./terraform
  login_azure:
    name: login azure
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_SECRET_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID}}

  Terraform:
    name: terraform
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_SECRET_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      tf_actions_working_dir: ./tf
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.tf_actions_working_dir }}

    strategy:
      fail-fast: false
      matrix:
        environment: [dev, production]
    steps:
      - name: Terraform Init
        id: init
        run: |
          terraform workspace create ${{ matrix.environment }}
          terraform select ${{ matrix.environment }}
          terraform init

      - name: Terraform Plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
